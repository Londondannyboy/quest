name: Deployment Status Reporter

on:
  push:
    branches: [ main ]

jobs:
  report-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            // Create a deployment status that Claude can monitor
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: 'Quest Core deployment to Vercel',
              auto_merge: false,
              required_contexts: []
            });

            console.log('Deployment created:', deployment.data.id);

            // Set initial status as pending
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'pending',
              description: 'Vercel build in progress...',
              environment_url: 'https://quest-core.vercel.app'
            });

      - name: Wait and check final status
        uses: actions/github-script@v7
        with:
          script: |
            // Wait for Vercel build (approximate time)
            await new Promise(resolve => setTimeout(resolve, 180000)); // 3 minutes

            // Try to fetch the site to see if deployment succeeded
            const https = require('https');
            
            const checkSite = () => {
              return new Promise((resolve) => {
                https.get('https://quest-core.vercel.app', (res) => {
                  resolve(res.statusCode === 200);
                }).on('error', () => {
                  resolve(false);
                });
              });
            };

            const isLive = await checkSite();
            
            if (isLive) {
              console.log('✅ Deployment appears successful');
              core.setOutput('status', 'success');
            } else {
              console.log('❌ Deployment may have failed');
              core.setOutput('status', 'failure');
            }

      - name: Report final status
        run: |
          echo "Final deployment status: ${{ steps.check.outputs.status }}"
          echo "Site URL: https://quest-core.vercel.app"
          echo "Commit: ${{ github.sha }}"