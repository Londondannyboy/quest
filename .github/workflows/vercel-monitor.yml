name: Vercel Deployment Monitor

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  monitor-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Type check
        run: npm run type-check

      - name: Lint code
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Deployment status check
        run: |
          echo "‚úÖ Build completed successfully"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Triggered by: ${{ github.event_name }}"
          
      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.pull_request?.number;
            if (issue_number) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: `‚ùå Build failed for commit ${context.sha.substring(0, 7)}. Claude will investigate automatically.`
              });
            }

  vercel-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Wait for Vercel Preview
        run: |
          echo "üöÄ Vercel preview deployment triggered"
          echo "Preview will be available at: https://quest-core-git-${{ github.head_ref }}-londondannyboys-projects.vercel.app"

  vercel-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Monitor Production Deployment
        run: |
          echo "üöÄ Production deployment triggered"
          echo "URL: https://quest-core.vercel.app"
          echo "Commit: ${{ github.sha }}"
          
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for Vercel deployment to complete..."
          sleep 30
          
      - name: Verify deployment
        run: |
          echo "üîç Checking if deployment is accessible..."
          curl -f -s -o /dev/null https://quest-core.vercel.app || echo "‚ö†Ô∏è Site may still be deploying"